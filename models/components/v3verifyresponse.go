// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// PossessionResult - Possession Result represents the result of the Possession check. Possible values are "pending" and "not_applicable", based on the Possession Type passed in the input. Clients will have to call the Verify Status API to get a result if Possession Result is pending.
type PossessionResult struct {
}

// Success is the result of the combination of Verify Result and Possession Result. Possible values are "true", "pending", and "false". The success value will be "pending" until the results of both Verify and Possession are returned or one of them fails, blocking the other.
type Success struct {
}

// VerifyResult - Verify Result represents the result of the Verify process. Possible values are "success", "pending", and "failed". If the Verify result is pending, clients will need to call the Verify Status API to get a result.
type VerifyResult struct {
}

type V3VerifyResponse struct {
	// AuthToken is a bearer token for use by the Prove Client SDK.
	AuthToken *string `json:"authToken,omitempty"`
	// Correlation ID is the unique ID that Prove generates for the flow. To continue the flow, the field will also be used for each of the subsequent API calls in the same flow - it cannot be reused outside of a single flow.
	CorrelationID string `json:"correlationId"`
	// Possession Result represents the result of the Possession check. Possible values are "pending" and "not_applicable", based on the Possession Type passed in the input. Clients will have to call the Verify Status API to get a result if Possession Result is pending.
	PossessionResult PossessionResult `json:"possessionResult"`
	// Success is the result of the combination of Verify Result and Possession Result. Possible values are "true", "pending", and "false". The success value will be "pending" until the results of both Verify and Possession are returned or one of them fails, blocking the other.
	Success Success `json:"success"`
	// Verify Result represents the result of the Verify process. Possible values are "success", "pending", and "failed". If the Verify result is pending, clients will need to call the Verify Status API to get a result.
	VerifyResult VerifyResult `json:"verifyResult"`
}

func (o *V3VerifyResponse) GetAuthToken() *string {
	if o == nil {
		return nil
	}
	return o.AuthToken
}

func (o *V3VerifyResponse) GetCorrelationID() string {
	if o == nil {
		return ""
	}
	return o.CorrelationID
}

func (o *V3VerifyResponse) GetPossessionResult() PossessionResult {
	if o == nil {
		return PossessionResult{}
	}
	return o.PossessionResult
}

func (o *V3VerifyResponse) GetSuccess() Success {
	if o == nil {
		return Success{}
	}
	return o.Success
}

func (o *V3VerifyResponse) GetVerifyResult() VerifyResult {
	if o == nil {
		return VerifyResult{}
	}
	return o.VerifyResult
}
