// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type V3VerifyStatusResponseEvaluation struct {
}

type V3VerifyStatusResponse struct {
	// The evaluation result for the policy
	Evaluation map[string]V3VerifyStatusResponseEvaluation `json:"evaluation,omitempty"`
	// A unique ID that Prove generates to refer to a specific identity.
	IdentityID *string `json:"identityId,omitempty"`
	// The result of the possession check. Possible values are `success`, `pending`, `failed`, and `not_applicable`.
	PossessionResult string `json:"possessionResult"`
	// The result of the combination of Verify Result and Possession Result. Possible values are `true`, `pending`, and `false`. The success value will be `pending` until the results of both Verify and Possession are returned or one of them fails, blocking the other.
	Success string `json:"success"`
	// The result of the Verify process. Possible values are `success`, `pending`, `failed`, and `not_applicable`.
	VerifyResult string `json:"verifyResult"`
}

func (o *V3VerifyStatusResponse) GetEvaluation() map[string]V3VerifyStatusResponseEvaluation {
	if o == nil {
		return nil
	}
	return o.Evaluation
}

func (o *V3VerifyStatusResponse) GetIdentityID() *string {
	if o == nil {
		return nil
	}
	return o.IdentityID
}

func (o *V3VerifyStatusResponse) GetPossessionResult() string {
	if o == nil {
		return ""
	}
	return o.PossessionResult
}

func (o *V3VerifyStatusResponse) GetSuccess() string {
	if o == nil {
		return ""
	}
	return o.Success
}

func (o *V3VerifyStatusResponse) GetVerifyResult() string {
	if o == nil {
		return ""
	}
	return o.VerifyResult
}
