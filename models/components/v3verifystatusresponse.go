// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// V3VerifyStatusResponsePossessionResult - The result of the possession check. Possible values are `success`, `pending`, `failed`, and `not_applicable`.
type V3VerifyStatusResponsePossessionResult struct {
}

// V3VerifyStatusResponseSuccess - The result of the combination of Verify Result and Possession Result. Possible values are `true`, `pending`, and `false`. The success value will be `pending` until the results of both Verify and Possession are returned or one of them fails, blocking the other.
type V3VerifyStatusResponseSuccess struct {
}

// V3VerifyStatusResponseVerifyResult - The result of the Verify process. Possible values are `success`, `pending`, `failed`, and `not_applicable`.
type V3VerifyStatusResponseVerifyResult struct {
}

type V3VerifyStatusResponse struct {
	// A unique ID that Prove generates to refer to a specific identity.
	IdentityID *string `json:"identityId,omitempty"`
	// The result of the possession check. Possible values are `success`, `pending`, `failed`, and `not_applicable`.
	PossessionResult V3VerifyStatusResponsePossessionResult `json:"possessionResult"`
	// The result of the combination of Verify Result and Possession Result. Possible values are `true`, `pending`, and `false`. The success value will be `pending` until the results of both Verify and Possession are returned or one of them fails, blocking the other.
	Success V3VerifyStatusResponseSuccess `json:"success"`
	// The result of the Verify process. Possible values are `success`, `pending`, `failed`, and `not_applicable`.
	VerifyResult V3VerifyStatusResponseVerifyResult `json:"verifyResult"`
}

func (o *V3VerifyStatusResponse) GetIdentityID() *string {
	if o == nil {
		return nil
	}
	return o.IdentityID
}

func (o *V3VerifyStatusResponse) GetPossessionResult() V3VerifyStatusResponsePossessionResult {
	if o == nil {
		return V3VerifyStatusResponsePossessionResult{}
	}
	return o.PossessionResult
}

func (o *V3VerifyStatusResponse) GetSuccess() V3VerifyStatusResponseSuccess {
	if o == nil {
		return V3VerifyStatusResponseSuccess{}
	}
	return o.Success
}

func (o *V3VerifyStatusResponse) GetVerifyResult() V3VerifyStatusResponseVerifyResult {
	if o == nil {
		return V3VerifyStatusResponseVerifyResult{}
	}
	return o.VerifyResult
}
