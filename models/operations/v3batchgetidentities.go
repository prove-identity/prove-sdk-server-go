// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/prove-identity/prove-sdk-server-go/models/components"
)

type V3BatchGetIdentitiesRequest struct {
	// A client-generated unique ID for a specific session. This can be used to identify specific requests. The format of this ID is defined by the client - Prove recommends using a GUID, but any format can be accepted. Do not include Personally Identifiable Information (PII) in this field.
	ClientRequestID *string `queryParam:"style=form,explode=true,name=clientRequestId"`
	// The maximum number of identities to return per call. Default value is 100.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// The pagination token for the GET /v3/identity API. Use this to retrieve the next page of results after a previous call to GET /v3/identity. This token is returned as lastKey in the GET /v3/identity API response - pass it in directly as startKey to get the next page of results.
	StartKey *string `queryParam:"style=form,explode=true,name=startKey"`
	// Whether to show identities associated with the current client that are currently marked as inactive. Default value is false.
	ShowInactive *bool `queryParam:"style=form,explode=true,name=showInactive"`
}

func (o *V3BatchGetIdentitiesRequest) GetClientRequestID() *string {
	if o == nil {
		return nil
	}
	return o.ClientRequestID
}

func (o *V3BatchGetIdentitiesRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *V3BatchGetIdentitiesRequest) GetStartKey() *string {
	if o == nil {
		return nil
	}
	return o.StartKey
}

func (o *V3BatchGetIdentitiesRequest) GetShowInactive() *bool {
	if o == nil {
		return nil
	}
	return o.ShowInactive
}

type V3BatchGetIdentitiesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// V3BatchGetIdentitiesResponse
	V3BatchGetIdentitiesResponse *components.V3BatchGetIdentitiesResponse
}

func (o *V3BatchGetIdentitiesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *V3BatchGetIdentitiesResponse) GetV3BatchGetIdentitiesResponse() *components.V3BatchGetIdentitiesResponse {
	if o == nil {
		return nil
	}
	return o.V3BatchGetIdentitiesResponse
}
